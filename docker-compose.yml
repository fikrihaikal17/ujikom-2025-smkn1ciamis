version: '3.8'

services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ujikom_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - ujikom_network
    depends_on:
      - mysql
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: ujikom_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ujikom_network
    depends_on:
      - app

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: ujikom_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ujikom_2025_smkn1ciamis
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_PASSWORD: secret
      MYSQL_USER: ujikom_user
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - ujikom_network

  # PostgreSQL Database (Alternative)
  postgres:
    image: postgres:15
    container_name: ujikom_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ujikom_2025_smkn1ciamis
      POSTGRES_USER: ujikom_user
      POSTGRES_PASSWORD: secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ujikom_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ujikom_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ujikom_network

  # Memcached
  memcached:
    image: memcached:alpine
    container_name: ujikom_memcached
    restart: unless-stopped
    ports:
      - "11211:11211"
    networks:
      - ujikom_network

  # Mailhog (Email Testing)
  mailhog:
    image: mailhog/mailhog
    container_name: ujikom_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ujikom_network

  # MinIO (S3 Compatible Storage)
  minio:
    image: minio/minio
    container_name: ujikom_minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: ujikom_admin
      MINIO_ROOT_PASSWORD: secret123
    command: server /data --console-address ":9001"
    networks:
      - ujikom_network

  # Node.js for Frontend Development
  node:
    image: node:18-alpine
    container_name: ujikom_node
    working_dir: /var/www
    volumes:
      - ./:/var/www
    ports:
      - "5173:5173"
    command: sh -c "npm install && npm run dev"
    networks:
      - ujikom_network

volumes:
  mysql_data:
  postgres_data:
  redis_data:
  minio_data:

networks:
  ujikom_network:
    driver: bridge